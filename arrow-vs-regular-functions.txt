Arrow Function vs regular function:

const X = function() {
  // "this" here is the caller of X
};

const Y = () => {
  // "this" here is NOT the caller of Y
  // It's the same "this" found in Y's scope
};

o Regular functions give access to their "calling" environment while arrow functions give access to their "defining" environment 
o The value of the "this" keyword inside a regular function depends on HOW the function was CALLED (the OBJECT that made the call).
o The value of the "this" keyword inside an arrow function depends on WHERE the function was DEFINED (the SCOPE that defined the function).
  


#reference : https://jscomplete.com/playground/arrow-vs-regular-functions